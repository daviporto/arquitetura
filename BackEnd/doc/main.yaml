openapi: 3.0.3
info:
  title: Blog
  description: Blog
  version: 1.0.0
servers:
  - url: http://localhost:80/api
components:
  securitySchemes:
    BearerAuth:
      $ref: '/Schemas/Common/Headers/AuthorizationHeader.yaml'

paths:
  /auth/register:
    post:
      tags:
        - Auth
      requestBody:
        $ref: 'Schemas/User/requestBodies/RegisterUserRequest.yaml'
      description: register new user
      responses:
        '204':
          description: No Content
  /auth/login:
    post:
      tags:
        - Auth
      requestBody:
        $ref: 'Schemas/User/requestBodies/LoginRequest.yaml'
      description: register new user
      responses:
        '200':
          $ref: 'Schemas/User/responses/LoginSuccessResponse.yaml'
        '401':
          $ref: 'Schemas/User/responses/LoginUnauthorizedResponse.yaml'
        '422':
          $ref: 'Schemas/Common/response/ValidationErrorsResponse.yaml'

  /auth/logout:
    post:
      tags:
        - Auth
      description: Logout
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          $ref: 'Schemas/User/responses/LogoutSuccessResponse.yaml'

  /auth/me:
    get:
      tags:
        - Auth
      description: Me
      security:
        - BearerAuth: [ ]

      responses:
        '200':
          $ref: 'Schemas/User/responses/meSuccessResponse.yaml'
  /auth/verify:
    post:
      tags:
        - Auth
      description: Verify
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          $ref: 'Schemas/User/responses/VerifyResponse.yaml'

  /user/{id}:
    get:
      tags:
        - User
      description: 'show specific user based on id'
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: 'Schemas/User/parameters/UserId.yaml'
        - $ref: 'Schemas/User/parameters/UserIncludesParameters.yaml'

      responses:
        '200':
          $ref: 'Schemas/User/responses/LoginSuccessResponse.yaml'
        '422':
          $ref: 'Schemas/Common/response/ValidationErrorsResponse.yaml'

  /user/competence:
    post:
      tags:
        - User
        - UserCompetence
      description: 'create user competence'
      security:
        - BearerAuth: [ ]
      requestBody:
        $ref: 'Schemas/User/Competence/requestBodies/CreateUserCompetencesRequest.yaml'

      responses:
        '204':
          description: No Content
        '422':
          $ref: 'Schemas/Common/response/ValidationErrorsResponse.yaml'

    delete:
      tags:
        - User
        - UserCompetence
      description: 'delete user competence(s)'
      security:
        - BearerAuth: [ ]
      requestBody:
        $ref: 'Schemas/User/Competence/requestBodies/DeleteUserCompetencesRequest.yaml'

      responses:
        '200':
          description: Deleted
        '422':
          $ref: 'Schemas/Common/response/ValidationErrorsResponse.yaml'

  /user/academic-records:
    post:
      tags:
        - User
        - UserAcademicRecords
      description: 'create user academic records'
      security:
        - BearerAuth: [ ]
      requestBody:
        $ref: 'Schemas/User/AcademicRecords/requestBodies/CreateUserAcademicRecordsRequest.yaml'

      responses:
        '204':
          description: No Content
        '422':
          $ref: 'Schemas/Common/response/ValidationErrorsResponse.yaml'

    delete:
      tags:
        - User
        - UserAcademicRecords
      description: 'delete user academic record(s)'
      security:
        - BearerAuth: [ ]
      requestBody:
        $ref: 'Schemas/User/AcademicRecords/requestBodies/DeleteUserAcademicRecordsRequest.yaml'

      responses:
        '200':
          description: Deleted
        '422':
          $ref: 'Schemas/Common/response/ValidationErrorsResponse.yaml'
